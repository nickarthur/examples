{
  "name": "vrjs-trackr-g4",
  "version": "0.0.5",
  "description": "polhemus g4 tracker for vrjs",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vrjs/trackr-g4.git"
  },
  "keywords": [
    "vrjs",
    "polhemus",
    "g4",
    "trackr",
    "tracker"
  ],
  "author": {
    "name": "Scott Frees"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/vrjs/trackr-g4/issues"
  },
  "homepage": "https://github.com/vrjs/trackr-g4#readme",
  "dependencies": {
    "g4": "0.0.4"
  },
  "readme": "# vrjs-trackr-g4\nThis is an npm module for the [vrjs]() framework that utilizes the [trackr-polhemus-g4] server to connect to a Polhemus G4 tracking system\n\n## Installation\n\n`npm install vrjs-trackr-g4`\n\n## Usage\n\n**Important** In order for this module to run, you must have the [trackr-polhemus-g4](https://github.com/freezer333/trackr-polhemus-g4) tracking server installed and running on your machine.  This module does not directly communicate with the tracking system, instead it connects over local TCP to the trackr-polhemus-g4 application server.\n\nIn your code, you can create a trackr object with the THREE object:\n\n```js\nvar factory = require('vrjs-trackr-g4')\nvar trackr = factory.make(THREE);\n```\n\nYou can add objects to sensors using the add method\n\n```js\ntrackr.add(object, sensor_number);\n```\n\nIn your animation loop, simply call the `poll` method and the module will automatically apply the sensor position and orientation to all tracked objects in the scene.\n\n```js\ntrackr.poll()\n```\n\nYou can apply optional positional offsets to the sensor and customized scalling using the `offset` and `scale` methods.  See source for details.\n\n",
  "readmeFilename": "readme.md",
  "gitHead": "a32b383883e5ac73fae418f46019dbe474855f07",
  "_id": "vrjs-trackr-g4@0.0.5",
  "_shasum": "73c758324b6711afdf7f20e0db088489b9a3d2d1",
  "_from": "vrjs-trackr-g4@*"
}
